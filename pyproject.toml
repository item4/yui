[project]
name = "yui"
version = "0.0.0"
description = "YUI is Multi-purpose Slack Bot."
license = { text = "MIT" }
readme = "README.rst"
requires-python = ">=3.13,<4.0"
authors = [{ name = "Kim, Jin Su" }]
dependencies = [
    "aiocron >= 2.1",
    "aiohttp >= 3.11.13",
    "alembic >= 1.15.1",
    "asyncclick >= 8.1.8",
    "attrdict >= 2.0.1",
    "attrs >= 25.3.0",
    "babel >= 2.17.0",
    "cssselect >= 1.3.0",
    "defusedxml >= 0.7.1",
    "discord-webhook[async] >= 1.4.1",
    "fastfeedparser >= 0.3.5",
    "lxml >= 5.3.1",
    "more-itertools >= 10.6.0",
    "orjson >= 3.10.15",
    "psycopg[binary] >= 3.2.6",
    "python-dateutil >= 2.9.0",
    "rapidfuzz >= 3.12.2",
    "scipy >= 1.15.2",
    "sqlalchemy-utils >= 0.41.2",
    "sqlalchemy[asyncio] >= 2.0.39",
    "sympy >= 1.13.3",
    "tossicat-python >= 0.1.3",
    "tzlocal >= 5.3.1",
    "valkey[libvalkey] >= 6.1.0",
    "yarl >= 1.18.3",
]

[project.urls]
repository = "https://github.com/item4/yui"

[project.optional-dependencies]
dev = [
    "aioresponses >= 0.7.8",
    "black >= 25.1.0",
    "croniter >= 6.0.0",
    "mypy >= 1.15.0",
    "pre-commit >= 4.1.0",
    "pytest >= 8.3.5",
    "pytest-asyncio >= 0.25.3",
    "pytest-cov >= 6.0.0",
    "ruff >= 0.11.0",
    "time-machine >= 2.16.0",
    "types-croniter >= 5.0.1",
    "types-orjson >= 3.6.2",
    "types-python-dateutil >= 2.9.0",
    "types-tzlocal >= 5.1.0",
]

[project.scripts]
yui = "yui.cli:main"


[tool.black]
line-length = 80
preview = true


[tool.ruff]
line-length = 120
target-version = "py313"


[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pyupgrade
    "UP",
    # flake8-2020
    "YTT",
    # flake8-async
    "ASYNC",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-bugbear
    "B",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-future-annotations
    "FA",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-no-pep420
    "INP",
    # flake8-pie
    "PIE",
    # flake8-pyi
    "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-return
    "RET",
    # flake8-slots
    "SLOT",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TC",
    # flake8-use-pathlib
    "PTH",
    # eradicate
    "ERA",
    # Pylint
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    # tryceratops
    "TRY",
    # flynt
    "FLY",
    # Perflint
    "PERF",
    # refurb
    "FURB",
    # Ruff-specific rules
    "RUF",
]
ignore = [
    # flake8-bandit
    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
    # flake8-pytest-style
    "PT011",  # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    # tryceratops
    "TRY003",  # Avoid specifying long messages outside the exception class
    "TRY301",  # Abstract raise to an inner function
    # pyupgrade
    "UP040",  # Type alias {name} uses TypeAlias annotation instead of the type keyword - mypy does not support this yet
    # Pylint
    "PLR09",  # Too many {problem}
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # flake8-bandit
    "S101",  # Use of assert detected
]
"yui/migrations/*" = [
    # eradicate
    "ERA001",  # Found commented-out code
]
"yui/migrations/versions/*" = [
    # flake8-no-pep420
    "INP001",  # File {filename} is part of an implicit namespace package. Add an __init__.py.
]

[tool.ruff.lint.isort]
force-single-line = true  # 한 줄 당 1개의 import 문
order-by-type = false  # 모두 대문자인 요소를 우선정렬하는 부분 비활성화
case-sensitive = true  # 대소문자 구분을 켜야 대문자 요소가 우선정렬됨
known-first-party = ["yui"]
section-order = ["future", "standard-library", "third-party", "tests", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
tests = ["tests"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "yui.utils.attrs.channel_id_field",
    "yui.utils.attrs.user_id_field",
    "yui.utils.attrs.name_field",
    "yui.utils.attrs.ts_field",
    "yui.utils.attrs.field",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
warn_unused_ignores = true  # Warns about unneeded # type: ignore comments.
show_error_codes = true

[tool.poetry]
requires-poetry = ">=2.1"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.9"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
