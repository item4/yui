[project]
name = "yui"
version = "0.1.0"
description = "YUI is Multi-purpose Slack Bot."
license = { text = "MIT" }
classifiers = ["Private :: Do Not Upload"]
readme = "README.rst"
requires-python = ">=3.13,<4.0"
authors = [{ name = "Kim, Jin Su" }]
dependencies = [
    "aiocron >= 2.1",
    "aiohttp >= 3.13.0",
    "alembic >= 1.16.5",
    "anyio >= 4.11.0",
    "asyncclick >= 8.3.0.5",
    "attrdict >= 2.0.1",
    "attrs >= 25.4.0",
    "babel >= 2.17.0",
    "cssselect >= 1.3.0",
    "defusedxml >= 0.7.1",
    "discord-webhook[async] >= 1.4.1",
    "fastfeedparser >= 0.4.3",
    "lxml >= 6.0.2",
    "more-itertools >= 10.8.0",
    "orjson >= 3.11.3",
    "psycopg[binary] >= 3.2.10",
    "python-dateutil >= 2.9.0",
    "rapidfuzz >= 3.14.1",
    "scipy >= 1.16.2",
    "sqlalchemy-utils >= 0.42.0",
    "sqlalchemy[asyncio] >= 2.0.43",
    "sympy >= 1.14.0",
    "tossicat-python >= 0.1.3",
    "tzlocal >= 5.3.1",
    "valkey[libvalkey] >= 6.1.1",
    "yarl >= 1.22.0",
]

[project.urls]
repository = "https://github.com/item4/yui"

[project.optional-dependencies]
dev = [
    "aioresponses >= 0.7.8",
    "black >= 25.9.0",
    "croniter >= 6.0.0",
    "mypy >= 1.18.2",
    "pre-commit >= 4.3.0",
    "pytest >= 8.4.2",
    "pytest-cov >= 7.0.0",
    "ruff >= 0.14.0",
    "time-machine >= 2.19.0",
    "types-croniter >= 6.0.0",
    "types-lxml >= 2025.8.25",
    "types-orjson >= 3.6.2",
    "types-python-dateutil >= 2.9.0",
    "types-tzlocal >= 5.1.0",
]

[project.scripts]
yui = "yui.cli:main"


[tool.black]
line-length = 80
preview = true


[tool.ruff]
line-length = 120
preview = true
src = ["tests", "yui"]
target-version = "py313"

[tool.ruff.lint]
select = [
    # eradicate
    "ERA",
    # flake8-2020
    "YTT",
    # flake8-async
    "ASYNC",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-boolean-trap
    "FBT",
    # flake8-bugbear
    "B",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-datetimez
    "DTZ",
    # flake8-debugger
    "T10",
    # flake8-errmsg
    "EM",
    # flake8-future-annotations
    "FA",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # flake8-pie
    "PIE",
    # flake8-print
    "T20",
    # flake8-pyi
    "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-raise
    "RSE",
    # flake8-return
    "RET",
    # flake8-simplify
    "SIM",
    # flake8-slots
    "SLOT",
    # flake8-type-checking
    "TC",
    # flake8-use-pathlib
    "PTH",
    # flynt
    "FLY",
    # isort
    "I",
    # Perflint
    "PERF",
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # Pylint
    "PL",
    # pyupgrade
    "UP",
    # refurb
    "FURB",
    # Ruff-specific rules
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # flake8-bandit
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    # Pylint
    "PLR09",   # Too many {problem}
    "PLR1702", # Too many nested blocks ({nested_blocks} > {max_nested_blocks})
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLR6301", # Method {method_name} could be a function, class method, or static method
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # flake8-bandit
    "S101", # Use of assert detected
    # flake8-pytest-style
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
]
"yui/migrations/*" = [
    # eradicate
    "ERA001", # Found commented-out code
]
"yui/migrations/versions/*" = [
    # flake8-no-pep420
    "INP001", # File {filename} is part of an implicit namespace package. Add an __init__.py.
]

[tool.ruff.lint.isort]
force-single-line = true # 한 줄 당 1개의 import 문
order-by-type = false # 모두 대문자인 요소를 우선정렬하는 부분 비활성화
case-sensitive = true # 대소문자 구분을 켜야 대문자 요소가 우선정렬됨
known-first-party = ["yui"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "tests",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
tests = ["tests"]

[tool.ruff.lint.flake8-boolean-trap]
extend-allowed-calls = ["yui.api.encoder.bool2str"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "yui.utils.attrs.channel_id_field",
    "yui.utils.attrs.user_id_field",
    "yui.utils.attrs.name_field",
    "yui.utils.attrs.ts_field",
    "yui.utils.attrs.field",
]


[tool.pytest.ini_options]
filterwarnings = ["always::DeprecationWarning"]
testpaths = ["tests"]


[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
warn_unused_ignores = true    # Warns about unneeded # type: ignore comments.
show_error_codes = true

[tool.uv.build-backend]
module-root = ""

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"
